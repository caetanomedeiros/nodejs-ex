

# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: oc-setup@2
  displayName: 'Setup Openshift CLI Environment'
  inputs:
    connectionType: 'OpenShift Connection Service'
    openshiftService: 'ocp-khm78'
- task: oc-cmd@2
  displayName: 'Create New Project on Openshift'
  inputs:
    connectionType: 'OpenShift Connection Service'
    openshiftService: 'ocp-khm78'
    cmd: 'oc new-project demo'
    ignoreFlag: true
- task: oc-cmd@2
  displayName: 'Create New Application on Openshift from Git Repository'
  inputs:
    connectionType: 'OpenShift Connection Service'
    openshiftService: 'ocp-khm78'
    #cmd: 'oc new-app https://github.com/redhat-developer/s2i-dotnetcore-ex -l name=demoapp -n demo'
    cmd: 'oc new-app dotnet:7.0-ubi8~https://github.com/redhat-developer/s2i-dotnetcore-ex#dotnet-7.0 --context-dir demo'
    ignoreFlag: true
- task: oc-cmd@2
  displayName: 'Create New Build on Openshift'
  inputs:
    connectionType: 'OpenShift Connection Service'
    openshiftService: 'ocp-khm78'
    cmd: 'oc start-build s2i-dotnetcore-ex --follow -n demo'
- task: oc-cmd@2
  displayName: 'Create New Router for Application on Openshift'
  inputs:
    connectionType: 'OpenShift Connection Service'
    openshiftService: 'ocp-khm78'
    cmd: 'oc expose service/s2i-dotnetcore-ex -n demo'
    ignoreFlag: true
- task: oc-cmd@2
  displayName: 'Check Application Deployment Status on Openshift'
  inputs:
    connectionType: 'OpenShift Connection Service'
    openshiftService: 'ocp-khm78'
    cmd: 'oc status -n demo'
